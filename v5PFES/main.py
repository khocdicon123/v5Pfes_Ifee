# -*- coding: utf-8 -*-
"""
/***************************************************************************
 v5PFES
                                 A QGIS plugin
 Support build PFES Map
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2022-02-06
        git sha              : $Format:%H$
        copyright            : (C) 2022 by IFFEE
        email                : phamquangduongvfu@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from qgis.core import *

from functools import partial

from .v5Pfes_dialogs import *

# Initialize Qt resources from file resources.py
from .resources import *

import os.path



class v5PFES_menu:
    """QGIS Plugin Implementation."""

    def __init__(self, iface):
        self.iface = iface
        self.v5PFES_menu = None

    def add_submenu(self, submenu):
        if self.v5PFES_menu != None:
            self.v5PFES_menu.addMenu(submenu)
        else:
            self.iface.addPluginToMenu("&v5PFES", submenu.menuAction())

    def initGui(self):
        # Uncomment the following two lines to have hcmgis accessible from a top-level menu
        self.v5PFES_menu = QMenu(QCoreApplication.translate("v5pfes", "v5PFES"))
        self.iface.mainWindow().menuBar().insertMenu(self.iface.firstRightStandardMenu().menuAction(), self.v5PFES_menu)
        # Tai ban bo DBR tu FORMIS
        self.download_DBR_menu = QMenu(u'Download FRMS')		
        self.add_submenu(self.download_DBR_menu)

        #Xay dung ban do DVMTR
        self.build_PFESMap_menu = QMenu(u'Build Map')		
        self.add_submenu(self.build_PFESMap_menu)

        icon = QIcon(os.path.dirname(__file__) + "/icons/demo.png")
        self.update_chrung_name = QAction(icon, u'Chuẩn hóa tên chủ rừng', self.iface.mainWindow())
        self.update_chrung_name.triggered.connect(self.func_update_chrung_name)		
        self.build_PFESMap_menu.addAction(self.update_chrung_name)

        icon = QIcon(os.path.dirname(__file__) + "/icons/demo.png")
        self.add_field_struc = QAction(icon, u'Xây dựng cấu trúc dữ liệu', self.iface.mainWindow())
        self.add_field_struc.triggered.connect(self.func_add_field_struc)		
        self.build_PFESMap_menu.addAction(self.add_field_struc)

        icon = QIcon(os.path.dirname(__file__) + "/icons/demo.png")
        self.update_vungchitra = QAction(icon, u'Cập nhật vùng chi trả DVMTR', self.iface.mainWindow())
        self.update_vungchitra.triggered.connect(self.func_update_vungchitra)		
        self.build_PFESMap_menu.addAction(self.update_vungchitra)

        icon = QIcon(os.path.dirname(__file__) + "/icons/demo.png")
        self.update_dtuong_chtra = QAction(icon, u'Cập nhật đối tượng chi trả', self.iface.mainWindow())
        self.update_dtuong_chtra.triggered.connect(self.func_update_dtuong_chtra)		
        self.build_PFESMap_menu.addAction(self.update_dtuong_chtra)

        icon = QIcon(os.path.dirname(__file__) + "/icons/demo.png")
        self.update_xakk = QAction(icon, u'Cập nhật xã khó khăn', self.iface.mainWindow())
        self.update_xakk.triggered.connect(self.func_update_xakk)		
        self.build_PFESMap_menu.addAction(self.update_xakk)

        icon = QIcon(os.path.dirname(__file__) + "/icons/demo.png")
        self.update_hesoK = QAction(icon, u'Cập nhật hệ số K', self.iface.mainWindow())
        self.update_hesoK.triggered.connect(self.func_update_hesoK)		
        self.build_PFESMap_menu.addAction(self.update_hesoK)

        icon = QIcon(os.path.dirname(__file__) + "/icons/demo.png")
        self.update_tinhchitra = QAction(icon, u'Xác định mức chi trả', self.iface.mainWindow())
        self.update_tinhchitra.triggered.connect(self.func_update_tinhchitra)		
        self.build_PFESMap_menu.addAction(self.update_tinhchitra)

        #Thong ke bang bieu
        self.static_form_menu = QMenu(u'Statistic')		
        self.add_submenu(self.static_form_menu)

        #Cong cu
        self.tool_menu = QMenu(u'Tool')		
        self.add_submenu(self.tool_menu)

        #Cong cu
        self.help_menu = QMenu(u'Help')		
        self.add_submenu(self.help_menu)
    def unload(self):
         self.iface.mainWindow().menuBar().removeAction(self.v5PFES_menu.menuAction())

##################################

    def func_update_chrung_name(self):
            dialog = update_chrung_name_dialog(self.iface)
            dialog.exec_()
    
    def func_add_field_struc(self):
            dialog = add_field_struc_dialog(self.iface)
            dialog.exec_()

    def func_update_vungchitra(self):
            dialog = update_vungchitra_dialog(self.iface)
            dialog.exec_()

    def func_update_dtuong_chtra(self):
            dialog = update_dtuong_chtra_dialog(self.iface)
            dialog.exec_()     

    def func_update_xakk(self):
            dialog = update_xakk_dialog(self.iface)
            dialog.exec_()

    def func_update_hesoK(self):
            dialog = update_hesoK_dialog(self.iface)
            dialog.exec_()

    def func_update_tinhchitra(self):
            dialog = update_tinhchitra_dialog(self.iface)
            dialog.exec_()

